---
# tasks file for macos

- name: macOS | Tap a Homebrew repository, state present
  community.general.homebrew_tap:
    name: "{{ item }}"
  with_items:
    - "{{ macos_homebrew_tap }}"
    - "{{ macos_homebrew_tap_ext }}"
  tags: ["tap"]

- name: macOS | Install base soft
  community.general.homebrew:
    name: "{{ item }}"
    state: present
  with_items:
    - "{{ macos_homebrew_pkg }}"
    - "{{ macos_homebrew_pkg_ext }}"
  tags: ["base"]

- name: macOS | Install cask soft
  community.general.homebrew_cask:
    name: "{{ item }}"
    state: present
  with_items:
    - "{{ macos_homebrew_cask_pkg }}"
    - "{{ macos_homebrew_cask_pkg_ext }}"
  tags: ["cask"]

- name: macOS | Install MAS soft
  community.general.mas:
    id: "{{ item.id }}"
    state: present
  with_items:
    - "{{ macos_mas_pkg }}"
    - "{{ macos_mas_pkg_ext }}"
  tags: ["mas"]

- name: macOS | Set a hostname
  ansible.builtin.hostname:
    name: "{{ macos_hostname }}.local"
  tags: ["hostname"]

- name: Ensure dotfiles repository is cloned locally.
  git:
    repo: "{{ dotfiles_repo }}"
    dest: "{{ dotfiles_repo_local_destination }}"
    version: "{{ dotfiles_repo_version }}"
    accept_hostkey: "{{ dotfiles_repo_accept_hostkey }}"
  become: false

- name: Ensure all configured dotfiles are links.
  command: "ls -F {{ dotfiles_home }}/{{ item }}"
  register: existing_dotfile_info
  failed_when: false
  check_mode: false
  changed_when: false
  with_items: "{{ dotfiles_files }}"

- name: Remove existing dotfiles file if a replacement is being linked.
  file:
    path: "{{ dotfiles_home }}/{{ dotfiles_files[item.0] }}"
    state: absent
  when: "'@' not in item.1.stdout"
  with_indexed_items: "{{ existing_dotfile_info.results }}"

- name: Link dotfiles into home folder.
  file:
    src: "{{ dotfiles_repo_local_destination }}/{{ item }}"
    dest: "{{ dotfiles_home }}/{{ item }}"
    state: link
    mode: 0644
  become: false
  with_items: "{{ dotfiles_files }}"

# TODO: Use sudo once .osx can be run via root with no user interaction.
#- name: Run .osx dotfiles.
##  command: "{{ osx_script }}"
#  changed_when: false

- name: Ensure Sublime Text directories exist.
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ sublime_base_path }}/{{ sublime_config_path }}"
    - "{{ sublime_base_path }}/Installed Packages"

- name: Ensure Sublime Package Control is installed.
  get_url:
    url: "https://packagecontrol.io/Package%20Control.sublime-package"
    dest: "{{ sublime_base_path }}/Installed Packages/Package Control.sublime-package"

- name: Ensure Sublime Package Control Packages are configured.
  template:
    src: templates/Package_Control.sublime-settings.j2
    dest: "{{ sublime_base_path }}/{{ sublime_config_path }}/Package Control.sublime-settings"

- name: Ensure Sublime text user Preferences and theme are set.
  copy:
    src: "files/{{ item }}"
    dest: "{{ sublime_base_path }}/{{ sublime_config_path }}/{{ item }}"
  loop:
    - "Cobalt (SL).tmTheme"
    - "Markdown.sublime-settings"
    - "Plain text.sublime-settings"
    - "Preferences.sublime-settings"
    - "WordCount.sublime-settings"
